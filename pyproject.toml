[project]
name = "rnnoisepy"
version = "1.0.0"
description = "RNNoise(python bindings)"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "numpy>=2.3.2",
]

[tool.hatch.build.targets.wheel]
packages = ["src/rnnoisepy"]
artifacts = ["**/*.so"]

[tool.hatch.build.targets.wheel.hooks.custom]
path = "hatch_build.py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
pure-python = false

# https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
extend-select = [
    # isort
    "I",
    # pyupgrade
    "UP",
    # pyflakes
    "F",
    # pycodestyle
    # "E", "W",
    # mccabe
    # "C",
    # flake8-2020
    "YTT",
    # flake8-annotations
    # "ANN",
    # flake8-async
    # "ASYNC",
    # flake8-bandit
    # "S",
    # flake8-boolean-trap
    # "FBT",
    # flake8-bugbear
    # "B",
    # flake8-builtins
    # "A",
    # flake8-commas
    "COM",
    # flake8-blind-except
    # "BLE",
    # flake8-comprehensions
    "C4",
    # flake8-datetimez
    # "DTZ",
    # flake8-debugger
    "T10",
    # flake8-errmsg
    # "EM",
    # flake8-executable
    "EXE",
    # flake8-future-annotations
    "FA",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-import-conventions
    "ICN",
    # flake8-logging
    "LOG",
    # flake8-logging-format
    # "G",
    # flake8-no-pep420
    # "INP",
    # flake8-pie
    "PIE",
    # flake8-print
    # "T20",
    # flake8-pyi
    # "PYI",
    # flake8-pytest-style
    "PT",
    # flake8-quotes
    "Q",
    # flake8-raise
    "RSE",
    # flake8-return
    "RET",
    # flake8-slots
    "SLOT",
    # flake8-simplify
    # "SIM",
    # flake8-tidy-imports
    # "TID",
    # flake8-type-checking
    # "TCH",
    # flake8-gettext
    "INT",
    # flake8-unused-arguments
    # "ARG",
    # flake8-use-pathlib
    # "PTH",
    # flake8-todos
    "TD",
    # flake8-fixme
    "FIX",
    # eradicate
    # "ERA",
    # Error
    "PLE",
    # Refactor
    # "PLR",
    # Warning
    "PLW",
    # tryceratops
    # "TRY",
    # flynt
    "FLY",
    # NumPy-specific rules
    "NPY",
    # FastAPI
    # "FAST",
    # pep8-naming
    # "N",
    # pydocstyle
    # "D",
    # flake8-self
    "SLF",
    # Ruff-specific rules
    # "RUF",
]

ignore = ["ISC001", "COM812"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
